import { VersionJson, VersionMap } from './FileAnalyzer';
import { SwppRules } from './SwppRules';
import { UpdateJson } from './UpdateJsonBuilder';
import { AnalyzeResult } from './VersionAnalyzer';
/** 创建一个变量 */
export declare function writeVariant<T>(key: string, value: T): T;
/** 读取一个变量 */
export declare function readVariant(key: string): any;
/** 移除一个变量 */
export declare function deleteVariant(key: string): void;
/**
 * 读取最后一次构建的 rules
 *
 * **执行该函数前必须调用过 [loadRules]**
 */
export declare function readRules(): SwppRules;
/**
 * 读取最后一次加载的 version json
 *
 * + **执行该函数前必须调用过 [loadRules]**
 * + **调用该函数前必须调用过 [loadCacheJson]**
 */
export declare function readOldVersionJson(): VersionJson | null;
/**
 * 读取最后一次构建的 VersionJson
 *
 * + **执行该函数前必须调用过 [loadRules]**
 * + **调用该函数前必须调用过 [loadCacheJson]**
 * + **执行该函数前必须调用过 [buildVersionJson]**
 * + **执行该函数前必须调用过 [calcEjectValues]**
 */
export declare function readNewVersionJson(): VersionJson;
/**
 * 读取新旧版本文件合并后的版本地图
 *
 * + **执行该函数前必须调用过 [loadRules]**
 * + **调用该函数前必须调用过 [loadCacheJson]**
 * + **执行该函数前必须调用过 [buildVersionJson]**
 * + **执行该函数前必须调用过 [calcEjectValues]**
 */
export declare function readMergeVersionMap(): VersionMap;
/**
 * 读取最后一次加载的版本文件
 *
 * + **调用该函数前必须调用过 [loadRules]**
 * + **调用该函数前必须调用过 [loadUpdateJson]**
 */
export declare function readUpdateJson(): UpdateJson | null;
/**
 * 读取分析结果
 *
 * + **执行该函数前必须调用过 [loadRules]**
 * + **调用该函数前必须调用过 [loadCacheJson]**
 * + **调用该函数前必须调用过 [analyze]**
 */
export declare function readAnalyzeResult(): AnalyzeResult;
/** 读取一个事件 */
export declare function readEvent<T>(key: string): T;
