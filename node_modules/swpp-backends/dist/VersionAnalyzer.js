"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.refreshUrl = exports.analyzeVersion = void 0;
const Utils_1 = require("./Utils");
const Variant_1 = require("./Variant");
/**
 * 分析两个版本信息的不同
 *
 * + **执行该函数前必须调用过 [loadRules]**
 * + **调用该函数前必须调用过 [loadCacheJson]**
 * + **调用该函数前必须调用过 [buildVersionJson]**
 */
function analyzeVersion() {
    const extraUrl = (0, Variant_1.readEvent)('refreshUrl');
    (0, Variant_1.writeVariant)('refreshUrl', false);
    const newVersion = (0, Variant_1.readNewVersionJson)();
    const oldVersion = (0, Variant_1.readOldVersionJson)();
    const result = {
        force: false,
        deleted: [],
        variational: [],
        refresh: [],
        rules: {
            add: [],
            remove: []
        }
    };
    if (!oldVersion)
        return result;
    if (newVersion.version !== oldVersion.version) {
        result.force = true;
        return result;
    }
    for (let url in oldVersion.list) {
        if (extraUrl.has(url)) {
            result.refresh.push(url);
            extraUrl.delete(url);
            continue;
        }
        const oldValue = oldVersion.list[url];
        const newValue = newVersion.list[url];
        if (!newValue) {
            result.deleted.push(url);
            continue;
        }
        const oldType = typeof oldValue;
        const newType = typeof newValue;
        if (oldType !== newType) {
            if (newType === 'string')
                result.rules.remove.push(url);
            else
                result.rules.add.push(url);
        }
        else if (oldType === 'string' && newValue !== oldValue) {
            result.variational.push(url);
        }
    }
    extraUrl.forEach(url => result.refresh.push(url));
    return (0, Variant_1.writeVariant)('swppAnalyze', (0, Utils_1.deepFreeze)(result));
}
exports.analyzeVersion = analyzeVersion;
(0, Variant_1.writeVariant)('refreshUrl', new Set());
/** 手动添加一个要刷新的 URL */
function refreshUrl(url) {
    (0, Variant_1.readEvent)('refreshUrl').add(url);
}
exports.refreshUrl = refreshUrl;
