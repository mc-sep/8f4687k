"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defConfig = exports.FileFetchModeLevel = void 0;
/** 文件拉取模式等级 */
var FileFetchModeLevel;
(function (FileFetchModeLevel) {
    /** 严格，不允许 404 */
    FileFetchModeLevel[FileFetchModeLevel["STRICT"] = 0] = "STRICT";
    /** 普通，允许 404，但仅允许服务器返回 404 状态码 */
    FileFetchModeLevel[FileFetchModeLevel["NORMAL"] = 1] = "NORMAL";
    /** 宽松，允许任何形式的 404，包括服务器返回 404、DNS 解析失败等 */
    FileFetchModeLevel[FileFetchModeLevel["LOOSE"] = 2] = "LOOSE";
})(FileFetchModeLevel || (exports.FileFetchModeLevel = FileFetchModeLevel = {}));
exports.defConfig = {
    serviceWorker: {
        escape: 0,
        cacheName: 'kmarBlogCache',
        debug: false
    },
    register: {
        onerror: () => console.error('Service Worker 注册失败！可能是由于您的浏览器不支持该功能！'),
        builder: (root, _, pluginConfig) => {
            const registerConfig = pluginConfig.register;
            const { onerror, onsuccess } = registerConfig;
            return `<script>
                (() => {
                    let sw = navigator.serviceWorker
                    let error = ${onerror.toString()}
                    if (!sw?.register('${new URL(root).pathname}sw.js')
                        ${onsuccess ? '?.then(' + onsuccess.toString() + ')' : ''}
                        ?.catch(error)
                    ) error()
                })()
            </script>`;
        }
    },
    dom: {},
    json: {
        maxHtml: 15,
        charLimit: 1024,
        merge: [],
        exclude: {
            localhost: [/^\/sw\.js$/],
            other: []
        }
    },
    external: {
        timeout: 5000,
        concurrencyLimit: 100,
        js: [],
        stable: [],
        replacer: (it) => it
    }
};
